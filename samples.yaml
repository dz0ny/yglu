---
  
---
title: Simple Expressions

# Reference to another node 
a: 1
b: !? .a + 1 
  
# String manipulation
c: hello,
d: world
e: !? $_.c.substring(0,1).toUpper() + 
      $_.c.substring(1) + $_.d

# $_ references the document root
# It is optional at the beginning of 
# expressions starting with a dot
---
title: Expression Key

# Expressions can also be used in mapping keys
name: FOO

!? .name.toLower(): bar

---
title: Hidden Nodes

# !- hides nodes in the output
a: !- Hello
b: !? .a.toUpper()  # still, you can reference them

# Hidden nodes can be expressions...
c: !- .a + ', '
d: !? $_.c + $_.e.f + $_.h[0]

# ...or complex nodes
e: !-
  f: world
  g: foo
    
h: !-
  - '!'
  - bar
---
title: Functions

# Functions are reusable expressions
capitalize: !() $.substring(0,1).toUpper() + 
                $.substring(1)

names: 
  - !? ($_.capitalize)(hello)
  - !? ($_.capitalize)(world)

---
title: Functions Blocks

# A function can be a block
entry: !()
  content: !? $
  length: !? len($)

# It can be applied to values...
simple: !? ($_.entry)(hello)

# ...or to complex nodes
input: !-
  hello: world
  foo: bar

complex: !? ($_.entry)($_.input)
---
title: Conditions

value: !- 2 # change me
a:
  b: 1
  !if $_.value = 1:
    c: 2
  !if $_.value = 2:
    d: 3
    e: 4
e:
  - 1
  - !if $_.value = 1:
      - 2
  - !if $_.value = 2:
      - 3
      - 4 
---
title: Loops

names: !-
  - hello
  - world

# Loops can generate mappings...
sizes:
  !for .names: !()
    !? $: !? len($)

# ...or sequences
upper:
  - !for .names: !()
      - !? $.toUpper()






